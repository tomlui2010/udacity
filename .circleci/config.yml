# # Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
# version: 2.1
# # Use a package of configuration called an orb.
# orbs:
#   # Declare a dependency on the welcome-orb
#   welcome: circleci/welcome-orb@0.4.1
# jobs:
#   print_hello:
#     docker:
#       - image: circleci/node:13.8.0
#     steps:
#       - run: echo "hello"
#       - run: echo "My name is $MY_NAME"
#       - run: # print the name of the branch we're on
#           name: "What branch am I on?"
#           command: echo ${CIRCLE_BRANCH}
#   print_world:
#     docker:
#       - image: circleci/node:13.8.0
#     steps:
#       - run: echo "world" 
# # Orchestrate or schedule a set of jobs

# workflows:
#   # Name the workflow "welcome"
#   welcome:
#     # Run the welcome/run job in its own container
#     jobs:
#       - print_hello
#       - print_world:
#           requires: 
#             - print_hello

# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
commands:
  print_pipeline_id:
    description: "Pipeline printing command"
    parameters:
      to:
        type: string
        default: $CIRCLE_WORKFLOW_ID
    steps:
      - run: echo << parameters.to >>

  
# Use a package of configuration called an orb.
orbs:
  # Declare a dependency on the welcome-orb
  welcome: circleci/welcome-orb@0.4.1
jobs:
  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: mkdir -p workspace
      - run: echo "My name is $MY_NAME" > workspace/output.txt
      - persist_to_workspace:
          root:  workspace
          paths:  
            -  output.txt
  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: cat /tmp/workspace/output.txt
  print_id_pipeline:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - print_pipeline_id:
          to: "1234"
        
# Orchestrate or schedule a set of jobs

workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - save_hello_world_output
      - print_output_file:
          requires: 
            - save_hello_world_output
      - print_id_pipeline

